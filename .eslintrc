{
  "parser": "babel-eslint",
  "plugins": [
    "react",
    "react-native",
    "jsx-a11y",
    "import",
    "flowtype"
  ],
  settings: {
    import/resolver: {
      "reactnative" : {
        "moduleDirectory": ["node_modules", "app"]
      }
    },
    flowtype: {
      onlyFilesWithFlowAnnotation: true,
      },
    },
  "parserOptions": {
      "ecmaVersion": 2016,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
    },
  "env": {
      "browser": true,
      "node": true,
      "es6": true,
      "jest": true
    },
  "globals": {
      "__DEV__": true,
      "window": true,
      "document": true,
      "describe": true,
      "expect": true,
      "it": true,
      "shallow": true,
      "shallowDive": true,
      "jasmine": true,
      "Generator": true,
      "objectValues": true,
      "NavigationMock": true,
    },
  "extends": [
    "plugin:react/recommended",
    "plugin:flowtype/recommended",
    "airbnb"
  ],
  "rules": {
        #### XXX Temporary workaround for eslint 4 upgrade  ####
        "jsx-a11y/href-no-hash": "off",
        #### Basic rules ####
        "global-require": 0, # Used by webpack isomorphic tools and React Native.
        "arrow-parens": 0, # Does not work with Flow generic types.
        "import/prefer-default-export": 0, # Nah. Actions can have just one action.
        "jsx-a11y/anchor-has-content": 0, # Does not work with new components.
        "no-mixed-operators": 0, # Prettier sorts it
        "no-shadow": 0, # Shadowing is a nice language feature. Naming is hard.
        "no-param-reassign": 0, # Usueful in reduce()
        "import/no-named-as-default": 0, # Not nice to component recomposition / HOC'ing
        "no-underscore-dangle": 0, # I'll use it sparingly, I promise
        "no-confusing-arrow": 0, # Not confusiont to me :(
        "import/no-extraneous-dependencies": 0, # I put dev tools int dev dependencies
        "no-nested-ternary": 0, # I'll rarely used them, I promise
        "no-console": ["warn", { allow: ["disableYellowBox", "ignoredYellowBox", "tron"] }],
        "no-use-before-define": [ "error", {
            "functions": false,
            "classes": true,
            "variables": true
          }
        ],
        "max-len": [ "error", 90, 2, {
            "ignorePattern": "^import.*",
            "ignoreUrls": true,
            "ignoreComments": true,
            "ignoreRegExpLiterals": false,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true
          }
        ],

        #### React ####
        "react/prop-types": ["warn", {skipUndeclared: true}], # only when an incomplete proptypes
        "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx"] }],
        "react/jsx-closing-bracket-location": 0, // Prettier does it
        "react/require-default-props": 0, # might reactivate if they support default declaration in ES6 destructured params
        "react/no-unused-prop-types": 0, # Seems it doesn't detect destructured props being used
        "react-native/no-unused-styles": ["error"],
        "react-native/split-platform-components": ["error"],

        #### Switching from error to warn ####
        "indent": ["warn"],
        "quotes": ["warn"],
        "arrow-spacing": ["warn"],
        "quote-props": ["warn"],
        "space-in-parens": ["warn"],
        "comma-dangle": ["warn"],
        "no-trailing-spaces": ["warn"],
        "no-multiple-empty-lines": ["warn"],
        "padded-blocks": ["warn"],
        "object-property-newline": ["warn"],
        "array-bracket-spacing": ["warn"],
        "no-multi-spaces": ["warn"],
        "space-infix-ops": ["warn"],
        "arrow-body-style": ["warn"],
        "no-unused-vars": ["warn"],
        "import/first": ["warn"],
        "key-spacing": ["warn"],
        "object-curly-spacing": ["warn"],
        "react/prefer-stateless-function": ["warn"],
        "prefer-const": ["warn"],
        "semi": ["warn"],
        "spaced-comment": ["warn"],
        "space-before-function-paren": ["warn"],
        "flowtype/space-after-type-colon": ["warn"],
  }
}
