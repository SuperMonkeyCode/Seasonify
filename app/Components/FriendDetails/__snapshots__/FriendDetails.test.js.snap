// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering when default state should match 1`] = `
<Styled(Container)>
  <Styled(Content)>
    <Styled(Form)>
      <Styled(Item)
        fixedLabel={true}
      >
        <Styled(Label)>
          Name
        </Styled(Label)>
        <Styled(Input)
          autoCapitalize="words"
          disabled={true}
          onChangeText={[Function]}
          value="A friend"
        />
      </Styled(Item)>
    </Styled(Form)>
    <Styled(ListItem)
      icon={true}
    >
      <Styled(Left)>
        <Styled(Button)
          disabled={true}
          style={
            Object {
              "backgroundColor": "pink",
              "flexBasis": "29%",
            }
          }
        />
      </Styled(Left)>
      <Styled(Body)>
        <Styled(PickerNB)
          iosHeader="Select a color"
          mode="dropdown"
          note={true}
          onValueChange={[Function]}
          selectedValue="pink"
        >
          <Item
            label="pink"
            value="pink"
          />
          <Item
            label="blue"
            value="blue"
          />
        </Styled(PickerNB)>
      </Styled(Body)>
    </Styled(ListItem)>
  </Styled(Content)>
</Styled(Container)>
`;

exports[`Rendering when editing should match 1`] = `
<Styled(Container)>
  <Styled(Content)>
    <Styled(Form)>
      <Styled(Item)
        fixedLabel={true}
      >
        <Styled(Label)>
          Name
        </Styled(Label)>
        <Styled(Icon)
          name="create"
        />
        <Styled(Input)
          autoCapitalize="words"
          disabled={false}
          onChangeText={[Function]}
          value="A friend mod"
        />
      </Styled(Item)>
    </Styled(Form)>
    <Styled(ListItem)
      icon={true}
    >
      <Styled(Left)>
        <Styled(Button)
          disabled={true}
          style={
            Object {
              "backgroundColor": "pink",
              "flexBasis": "29%",
            }
          }
        />
      </Styled(Left)>
      <Styled(Body)>
        <Styled(PickerNB)
          iosHeader="Select a color"
          mode="dropdown"
          note={true}
          onValueChange={[Function]}
          selectedValue="pink"
        >
          <Item
            label="pink"
            value="pink"
          />
          <Item
            label="blue"
            value="blue"
          />
        </Styled(PickerNB)>
      </Styled(Body)>
    </Styled(ListItem)>
  </Styled(Content)>
</Styled(Container)>
`;

exports[`Rendering when no friend should match 1`] = `<Styled(Container) />`;
